fragment ConsumedFields on ConsumedType {
	id
	product {
		...ProductFields
	}
	user {
		id
	}
	when
	meal
	howMany
	__typename
}

query consumedByWhenAndUsername($when: Date!, $username: String!) {
	consumedByWhenAndUsername(when: $when, username: $username) {
		...ConsumedFields
	}
	userByUsername(username: $username) {
		...UserFields
	}
}

query consumedByRangeAndUsername($startDate: Date!, $endDate: Date!, $username: String!) {
	consumedByRangeAndUsername(startDate: $startDate, endDate: $endDate, username: $username) {
		...ConsumedFields
	}
}

mutation createConsumed(
	$id: UUID!
	$when: Date!
	$howMany: Decimal!
	$user: UUID!
	$product: UUID!
	$meal: Int!
) {
	createConsumed(
		id: $id
		when: $when
		howMany: $howMany
		user: $user
		product: $product
		meal: $meal
	) {
		consumed {
			...ConsumedFields
		}
	}
}

mutation updateConsumed($id: UUID!, $howMany: Decimal!, $meal: Int!) {
	updateConsumed(id: $id, howMany: $howMany, meal: $meal) {
		consumed {
			...ConsumedFields
		}
	}
}

mutation deleteConsumed($id: UUID!) {
	deleteConsumed(id: $id) {
		consumed {
			id
		}
	}
}
