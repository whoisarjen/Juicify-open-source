version: "3.8"
services:
    postgres:
        image: postgres:15.1
        restart: unless-stopped
        container_name: postgres
        environment:
            POSTGRES_DB: juicify
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        volumes:
            - postgres-data:/var/lib/postgresql/data
        expose:
            - "5432"
        labels:
            - "traefik.enable=true"
            - "traefik.tcp.routers.postgres.entrypoints=postgres"
            - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
            - "traefik.tcp.routers.postgres.tls=false"
            - "traefik.tcp.services.postgres.loadBalancer.server.port=5432"
            - "traefik.tcp.routers.postgres.service=postgres"

    redis:
        image: redis:latest
        restart: unless-stopped
        container_name: redis
        expose:
            - "6379"
        volumes:
            - redis_data:/data

    nextjs:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        container_name: nextjs
        volumes:
            - .:/usr/src/app
        ports:
            - "3000:3000"
        expose:
            - "3000"
        depends_on:
            - postgres
            - redis
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nextjs.rule=Host(`juicify.app`)"
            - "traefik.http.routers.nextjs.entrypoints=websecure"
            - "traefik.http.routers.nextjs.tls.certresolver=myresolver"
            - "traefik.tcp.routers.postgres.entrypoints=postgres"
        command: npm run start

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:v0.47.0
        container_name: cadvisor
        restart: unless-stopped
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        devices:
            - /dev/kmsg
        privileged: true

    prometheus:
        image: prom/prometheus:latest
        restart: unless-stopped
        container_name: prometheus
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - ./prometheus/:/etc/prometheus/
            - prometheus-data:/prometheus
        depends_on:
            - nextjs
        ports:
            - "9090:9090"
        expose:
            - "9090"
        command: "--config.file=/etc/prometheus/prometheus.yml"

    grafana:
        image: grafana/grafana-oss:latest
        restart: unless-stopped
        container_name: grafana
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - ./grafana/grafana.ini:/etc/grafana/grafana.ini
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/data:/var/lib/grafana
        user: "1000"
        depends_on:
            - prometheus
        ports:
            - "3001:3001"
        expose:
            - "3001"

volumes:
    postgres-data:
    redis_data:
    prometheus-data:
    grafana-data:

networks:
    default:
        external:
            name: traefik-net
